// Script para verificar se o banco de dados est√° vazio ap√≥s a exclus√£o

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function verifyEmptyDatabase() {
  console.log('üîç Verificando se o banco de dados est√° vazio...');
  
  try {
    const [testResultCount, testSessionCount, answerCount, aiAnalysisCount] = await Promise.all([
      prisma.testResult.count(),
      prisma.testSession.count(),
      prisma.answer.count(),
      prisma.aIAnalysis.count()
    ]);
    
    const total = testResultCount + testSessionCount + answerCount + aiAnalysisCount;
    
    console.log('\nüìä CONTAGEM ATUAL DO BANCO DE DADOS:');
    console.log(`üìã TestResult: ${testResultCount}`);
    console.log(`üìã TestSession: ${testSessionCount}`);
    console.log(`üìã Answer: ${answerCount}`);
    console.log(`üìã AIAnalysis: ${aiAnalysisCount}`);
    console.log(`üìã TOTAL: ${total}`);
    
    if (total === 0) {
      console.log('\n‚úÖ SUCESSO: O banco de dados est√° completamente vazio!');
      console.log('üéâ Todos os 237 registros foram exclu√≠dos permanentemente.');
    } else {
      console.log('\n‚ö†Ô∏è ATEN√á√ÉO: Ainda existem registros no banco de dados!');
      console.log(`‚ùå ${total} registros ainda est√£o presentes.`);
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar o banco de dados:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Executar a verifica√ß√£o
if (require.main === module) {
  verifyEmptyDatabase().catch((error) => {
    console.error('‚ùå Erro fatal:', error);
    process.exit(1);
  });
}

export { verifyEmptyDatabase };