#!/usr/bin/env node

/**
 * Script de Restaura√ß√£o - Retornar √† Vers√£o 2
 * Comando direto para retornar √† vers√£o 2.0.0
 */

const VersionControl = require('./version-control');
const { execSync } = require('child_process');

class RestoreVersion2 {
  constructor() {
    this.vc = new VersionControl();
  }

  async execute() {
    console.log('üéØ Iniciando restaura√ß√£o para Vers√£o 2...');
    console.log('==========================================\n');

    // Verifica se a vers√£o 2.0.0 existe
    const availableVersions = this.vc.getAvailableVersions();
    const version2 = availableVersions.find(v => v === 'v2.0.0');
    
    if (!version2) {
      console.error('‚ùå Vers√£o 2.0.0 n√£o encontrada!');
      console.log('\nVers√µes dispon√≠veis:');
      this.vc.listVersions();
      return false;
    }

    // Verifica se j√° est√° na vers√£o 2
    const currentVersion = this.vc.getCurrentVersion();
    if (currentVersion === 'v2.0.0') {
      console.log('‚úÖ Voc√™ j√° est√° na Vers√£o 2.0.0!');
      this.showVersion2Features();
      return true;
    }

    // Executa a mudan√ßa para vers√£o 2
    const success = this.vc.switchToVersion('v2.0.0');
    
    if (success) {
      console.log('\nüéâ Restaura√ß√£o para Vers√£o 2 conclu√≠da com sucesso!');
      this.showVersion2Features();
      this.showNextSteps();
    }

    return success;
  }

  showVersion2Features() {
    console.log('\nüìã Funcionalidades da Vers√£o 2.0.0:');
    console.log('====================================');
    console.log('‚úÖ Sauda√ß√µes personalizadas');
    console.log('‚úÖ Sistema de versionamento');
    console.log('‚úÖ Download de PDF');
    console.log('‚úÖ Interface melhorada');
    console.log('‚úÖ Controle de vers√µes integrado');
    console.log('‚úÖ Comandos de restaura√ß√£o');
  }

  showNextSteps() {
    console.log('\nüöÄ Pr√≥ximos passos:');
    console.log('===================');
    console.log('1. Execute "npm install" para garantir depend√™ncias');
    console.log('2. Execute "npm run dev" para iniciar o servidor');
    console.log('3. Acesse http://localhost:3000 para ver a aplica√ß√£o');
    console.log('\nüí° Para retornar ao desenvolvimento:');
    console.log('   node scripts/version-control.js dev');
  }
}

// Execu√ß√£o direta
if (require.main === module) {
  const restore = new RestoreVersion2();
  restore.execute().then(success => {
    process.exit(success ? 0 : 1);
  }).catch(error => {
    console.error('‚ùå Erro durante a restaura√ß√£o:', error.message);
    process.exit(1);
  });
}

module.exports = RestoreVersion2;