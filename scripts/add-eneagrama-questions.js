const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function addEneagramaQuestions() {
  try {
    console.log('üöÄ Iniciando cria√ß√£o das quest√µes do HumaniQ Eneagrama...')

    // 1. Verificar se o teste existe
    const test = await prisma.test.findFirst({
      where: {
        OR: [
          { id: 'humaniq_eneagrama' },
          { name: { contains: 'Eneagrama' } }
        ]
      }
    })

    if (!test) {
      console.error('‚ùå Teste de Eneagrama n√£o encontrado!')
      return
    }

    console.log('‚úÖ Teste encontrado:', test.name, '(ID:', test.id, ')')

    // 2. Verificar se j√° existem quest√µes
    const existingQuestions = await prisma.question.count({
      where: { testId: test.id }
    })

    if (existingQuestions > 0) {
      console.log(`‚ö†Ô∏è J√° existem ${existingQuestions} quest√µes para este teste.`)
      console.log('Deseja continuar e adicionar mais quest√µes? (Ctrl+C para cancelar)')
    }

    // 3. Criar as 45 quest√µes do Eneagrama (5 quest√µes por tipo)
    console.log('‚ùì Criando quest√µes do Eneagrama...')
    const questions = [
      // TIPO 1 - O PERFECCIONISTA
      { number: 1, text: 'Tenho padr√µes muito altos para mim mesmo e para os outros.', type: 1 },
      { number: 2, text: 'Fico irritado quando as coisas n√£o s√£o feitas da maneira correta.', type: 1 },
      { number: 3, text: 'Sinto-me respons√°vel por corrigir erros e melhorar as situa√ß√µes.', type: 1 },
      { number: 4, text: 'Tenho dificuldade em relaxar quando h√° trabalho a ser feito.', type: 1 },
      { number: 5, text: 'Critico a mim mesmo quando cometo erros.', type: 1 },

      // TIPO 2 - O AJUDANTE
      { number: 6, text: 'Gosto de ajudar os outros, mesmo quando n√£o pedem.', type: 2 },
      { number: 7, text: 'Tenho facilidade em perceber as necessidades das pessoas.', type: 2 },
      { number: 8, text: '√Äs vezes me esque√ßo das minhas pr√≥prias necessidades.', type: 2 },
      { number: 9, text: 'Sinto-me bem quando sou √∫til e necess√°rio para algu√©m.', type: 2 },
      { number: 10, text: 'Tenho dificuldade em dizer "n√£o" quando algu√©m precisa de ajuda.', type: 2 },

      // TIPO 3 - O REALIZADOR
      { number: 11, text: 'Gosto de ser reconhecido pelos meus sucessos e conquistas.', type: 3 },
      { number: 12, text: 'Trabalho duro para alcan√ßar meus objetivos.', type: 3 },
      { number: 13, text: 'Preocupo-me com a imagem que projeto para os outros.', type: 3 },
      { number: 14, text: 'Tenho facilidade em me adaptar a diferentes situa√ß√µes sociais.', type: 3 },
      { number: 15, text: 'Fico impaciente com pessoas que trabalham devagar.', type: 3 },

      // TIPO 4 - O INDIVIDUALISTA
      { number: 16, text: 'Sinto-me diferente das outras pessoas.', type: 4 },
      { number: 17, text: 'Meus sentimentos s√£o intensos e profundos.', type: 4 },
      { number: 18, text: 'Valorizo a autenticidade e a express√£o pessoal.', type: 4 },
      { number: 19, text: '√Äs vezes me sinto melanc√≥lico ou nost√°lgico.', type: 4 },
      { number: 20, text: 'Tenho uma rica vida interior e imagina√ß√£o.', type: 4 },

      // TIPO 5 - O INVESTIGADOR
      { number: 21, text: 'Preciso de tempo sozinho para recarregar minhas energias.', type: 5 },
      { number: 22, text: 'Gosto de entender como as coisas funcionam.', type: 5 },
      { number: 23, text: 'Prefiro observar antes de participar.', type: 5 },
      { number: 24, text: 'Sinto-me desconfort√°vel quando as pessoas s√£o muito emotivas.', type: 5 },
      { number: 25, text: 'Valorizo minha privacidade e independ√™ncia.', type: 5 },

      // TIPO 6 - O LEAL
      { number: 26, text: 'Busco seguran√ßa e estabilidade na vida.', type: 6 },
      { number: 27, text: 'Questiono autoridades e suas motiva√ß√µes.', type: 6 },
      { number: 28, text: 'Preocupo-me com poss√≠veis problemas futuros.', type: 6 },
      { number: 29, text: 'Sou leal aos meus amigos e grupos.', type: 6 },
      { number: 30, text: 'Tenho dificuldade em tomar decis√µes importantes sozinho.', type: 6 },

      // TIPO 7 - O ENTUSIASTA
      { number: 31, text: 'Gosto de ter muitas op√ß√µes e possibilidades.', type: 7 },
      { number: 32, text: 'Fico entediado facilmente com rotinas.', type: 7 },
      { number: 33, text: 'Sou otimista e vejo o lado positivo das situa√ß√µes.', type: 7 },
      { number: 34, text: 'Tenho muitos interesses e hobbies diferentes.', type: 7 },
      { number: 35, text: 'Evito situa√ß√µes que me fazem sentir limitado ou preso.', type: 7 },

      // TIPO 8 - O DESAFIADOR
      { number: 36, text: 'Gosto de estar no controle das situa√ß√µes.', type: 8 },
      { number: 37, text: 'N√£o tenho medo de confrontos ou conflitos.', type: 8 },
      { number: 38, text: 'Protejo pessoas que considero vulner√°veis.', type: 8 },
      { number: 39, text: 'Expresso minha raiva de forma direta.', type: 8 },
      { number: 40, text: 'Tenho energia intensa e presen√ßa forte.', type: 8 },

      // TIPO 9 - O PACIFICADOR
      { number: 41, text: 'Evito conflitos e busco harmonia.', type: 9 },
      { number: 42, text: 'Tenho dificuldade em expressar minha raiva.', type: 9 },
      { number: 43, text: 'Procrastino em decis√µes importantes.', type: 9 },
      { number: 44, text: 'Consigo ver diferentes pontos de vista em uma discuss√£o.', type: 9 },
      { number: 45, text: 'Prefiro manter a paz a impor minha opini√£o.', type: 9 }
    ]

    // 4. Criar cada quest√£o no banco de dados
    for (const question of questions) {
      await prisma.question.create({
        data: {
          testId: test.id,
          questionNumber: question.number,
          questionText: question.text,
          questionType: 'SCALE',
          isRequired: true,
          options: {
            scale: {
              min: 1,
              max: 5,
              labels: {
                1: 'Discordo totalmente',
                2: 'Discordo',
                3: 'Neutro',
                4: 'Concordo',
                5: 'Concordo totalmente'
              }
            }
          },
          metadata: {
            enneagramType: question.type,
            category: 'personality'
          }
        }
      })
    }

    console.log(`‚úÖ Todas as ${questions.length} quest√µes foram criadas!`)

    // 5. Verificar o resultado final
    const finalCount = await prisma.question.count({
      where: { testId: test.id }
    })

    console.log(`üìä Total de quest√µes no teste: ${finalCount}`)
    console.log('üéâ Quest√µes do HumaniQ Eneagrama criadas com sucesso!')
    console.log('üîó ID do teste:', test.id)

    // 6. Atualizar configura√ß√£o do teste se necess√°rio
    await prisma.test.update({
      where: { id: test.id },
      data: {
        configuration: {
          ...test.configuration,
          totalQuestions: finalCount
        }
      }
    })

    console.log('‚úÖ Configura√ß√£o do teste atualizada!')

  } catch (error) {
    console.error('‚ùå Erro ao criar quest√µes:', error)
  } finally {
    await prisma.$disconnect()
  }
}

addEneagramaQuestions()