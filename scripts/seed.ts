
// HumaniQ AI - Database Seed Script
// Populates database with initial data for testing

import { PrismaClient, TestType, QuestionType } from '@prisma/client'
import bcrypt from 'bcryptjs'
import { getDefaultPermissions } from '../lib/auth'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Starting database seed...')

  // Create main admin user (SaaS owner)
  console.log('üë§ Creating main administrator...')
  const adminPassword = await bcrypt.hash('admin123', 12)
  
  const adminUser = await prisma.user.upsert({
    where: { email: 'admin@humaniq.ai' },
    update: {},
    create: {
      email: 'admin@humaniq.ai',
      firstName: 'Admin',
      lastName: 'HumaniQ',
      password: adminPassword,
      userType: 'ADMIN',
      isActive: true,
      emailVerified: new Date()
    }
  })

  // Create admin permissions
  const adminPermissions = getDefaultPermissions('ADMIN')
  for (const permission of adminPermissions) {
    await prisma.userPermission.upsert({
      where: {
        userId_permission: {
          userId: adminUser.id,
          permission: permission
        }
      },
      update: {},
      create: {
        userId: adminUser.id,
        permission: permission
      }
    })
  }

  // Create demo company user
  console.log('üè¢ Creating demo company user...')
  const companyPassword = await bcrypt.hash('empresa123', 12)
  
  const companyUser = await prisma.user.upsert({
    where: { email: 'empresa@demo.com' },
    update: {},
    create: {
      email: 'empresa@demo.com',
      firstName: 'Empresa',
      lastName: 'Demo',
      password: companyPassword,
      userType: 'COMPANY',
      isActive: true,
      emailVerified: new Date(),
      companyId: null // Will be set after company creation
    }
  })

  // Create demo employee user
  console.log('üë§ Creating demo employee user...')
  const employeePassword = await bcrypt.hash('colaborador123', 12)
  
  const employeeUser = await prisma.user.upsert({
    where: { email: 'colaborador@demo.com' },
    update: {},
    create: {
      email: 'colaborador@demo.com',
      firstName: 'Jo√£o',
      lastName: 'Silva',
      password: employeePassword,
      userType: 'EMPLOYEE',
      isActive: true,
      emailVerified: new Date(),
      companyId: null // Will be set after company creation
    }
  })

  // Create demo candidate user
  console.log('üéØ Creating demo candidate user...')
  const candidatePassword = await bcrypt.hash('candidato123', 12)
  
  const candidateUser = await prisma.user.upsert({
    where: { email: 'candidato@demo.com' },
    update: {},
    create: {
      email: 'candidato@demo.com',
      firstName: 'Maria',
      lastName: 'Santos',
      password: candidatePassword,
      userType: 'CANDIDATE',
      isActive: true,
      emailVerified: new Date(),
      companyId: null // Will be set after company creation
    }
  })

  // Create test categories
  console.log('üìã Creating test categories...')
  const categories = [
    {
      name: 'Testes Psicossociais',
      description: 'Avalia√ß√£o de riscos psicossociais, burnout, sa√∫de mental e seguran√ßa ocupacional',
      icon: 'Brain',
      color: '#3B82F6',
      sortOrder: 1
    },
    {
      name: 'Testes de Perfil',
      description: 'An√°lise de personalidade, comportamento e intelig√™ncia emocional',
      icon: 'User',
      color: '#10B981',
      sortOrder: 2
    },
    {
      name: 'Teste Grafol√≥gico',
      description: 'An√°lise de personalidade atrav√©s da an√°lise da escrita',
      icon: 'PenTool',
      color: '#F59E0B',
      sortOrder: 3
    },
    {
      name: 'Testes Corporativos',
      description: 'Compet√™ncias profissionais, lideran√ßa, trabalho em equipe e habilidades organizacionais',
      icon: 'Building',
      color: '#8B5CF6',
      sortOrder: 4
    }
  ]

  const createdCategories = []
  for (const category of categories) {
    // Check if category exists by name
    const existing = await prisma.testCategory.findFirst({
      where: { name: category.name }
    })
    
    let created
    if (existing) {
      created = await prisma.testCategory.update({
        where: { id: existing.id },
        data: category
      })
    } else {
      created = await prisma.testCategory.create({
        data: category
      })
    }
    createdCategories.push(created)
  }

  // Create the complete 18 tests as specified
  console.log('üß™ Creating the 18 HumaniQ tests...')
  const tests = [
    // CATEGORIA 1: TESTES PSICOSSOCIAIS (4 TESTES)
    {
      categoryId: createdCategories[0].id,
      name: 'HumaniQ RPO - Riscos Psicossociais Ocupacionais',
      description: 'Avalia a presen√ßa de riscos psicossociais no ambiente de trabalho baseado na ISO 10075 e Modelo de Demandas-Controle de Karasek.',
      instructions: 'Responda baseado em sua experi√™ncia atual no trabalho. Use a escala de 1 (Nunca) a 5 (Sempre). Total: 96 quest√µes organizadas em 8 dimens√µes.',
      testType: TestType.PSYCHOSOCIAL,
      estimatedDuration: 45,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 2700,
        retakePolicy: 'limited',
        maxRetakes: 2,
        dimensions: ['Demandas do Trabalho', 'Autonomia e Controle', 'Rela√ß√µes Interpessoais', 'Reconhecimento', 'Justi√ßa Organizacional', 'Seguran√ßa no Trabalho', 'Interface Trabalho-Vida', 'Viol√™ncia/Ass√©dio'],
        questionsPerDimension: 12,
        totalQuestions: 96
      }
    },
    {
      categoryId: createdCategories[0].id,
      name: 'HumaniQ BSC - Burnout Scale Corporate',
      description: 'Avalia n√≠veis de esgotamento profissional baseado no Maslach Burnout Inventory adaptado para ambiente corporativo.',
      instructions: 'Reflita sobre seus sentimentos em rela√ß√£o ao trabalho nos √∫ltimos 6 meses. Responda com honestidade usando a escala fornecida.',
      testType: TestType.PSYCHOSOCIAL,
      estimatedDuration: 20,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 1200,
        retakePolicy: 'limited',
        maxRetakes: 1,
        dimensions: ['Exaust√£o Emocional', 'Despersonaliza√ß√£o', 'Realiza√ß√£o Pessoal'],
        totalQuestions: 22
      }
    },
    {
      categoryId: createdCategories[0].id,
      name: 'HumaniQ SESM - Sa√∫de Mental e Bem-estar',
      description: 'Avalia indicadores de sa√∫de mental, bem-estar psicol√≥gico e qualidade de vida no trabalho.',
      instructions: 'Considere como voc√™ tem se sentido nas √∫ltimas duas semanas. Responda de forma sincera sobre seu estado emocional e mental.',
      testType: TestType.PSYCHOSOCIAL,
      estimatedDuration: 25,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 1500,
        retakePolicy: 'unlimited',
        dimensions: ['Bem-estar Emocional', 'Estresse', 'Ansiedade', 'Depress√£o', 'Satisfa√ß√£o com a Vida'],
        totalQuestions: 30
      }
    },
    {
      categoryId: createdCategories[0].id,
      name: 'HumaniQ RAO - Risco de Acidente e Seguran√ßa Ocupacional',
      description: 'Avalia fatores comportamentais e psicol√≥gicos relacionados √† seguran√ßa no trabalho e propens√£o a acidentes.',
      instructions: 'Responda com base em seu comportamento habitual no ambiente de trabalho. Foque em situa√ß√µes de seguran√ßa e preven√ß√£o.',
      testType: TestType.PSYCHOSOCIAL,
      estimatedDuration: 30,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 1800,
        retakePolicy: 'limited',
        maxRetakes: 2,
        dimensions: ['Percep√ß√£o de Risco', 'Comportamento Seguro', 'Atitude com Normas', 'Impulsividade'],
        totalQuestions: 40
      }
    },

    // CATEGORIA 2: TESTES DE PERFIL (4 TESTES)
    {
      categoryId: createdCategories[1].id,
      name: 'HumaniQ BFI - Big Five Inventory',
      description: 'Avalia os cinco principais fatores de personalidade: Abertura, Conscienciosidade, Extrovers√£o, Amabilidade e Neuroticismo.',
      instructions: 'Avalie cada afirma√ß√£o de acordo com o quanto ela descreve voc√™. Use a escala de 1 (Discordo totalmente) a 5 (Concordo totalmente).',
      testType: TestType.PERSONALITY,
      estimatedDuration: 15,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: true,
        timeLimit: 900,
        retakePolicy: 'limited',
        maxRetakes: 1,
        dimensions: ['Abertura', 'Conscienciosidade', 'Extrovers√£o', 'Amabilidade', 'Neuroticismo'],
        totalQuestions: 44
      }
    },
    {
      categoryId: createdCategories[1].id,
      name: 'HumaniQ 16P - 16 Tipos de Personalidade',
      description: 'Baseado no MBTI, identifica um dos 16 tipos de personalidade atrav√©s de 4 dimens√µes principais.',
      instructions: 'Para cada par de caracter√≠sticas, escolha a que melhor descreve sua prefer√™ncia natural. N√£o h√° respostas certas ou erradas.',
      testType: TestType.PERSONALITY,
      estimatedDuration: 25,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 1500,
        retakePolicy: 'unlimited',
        dimensions: ['Extrovers√£o vs Introvers√£o', 'Sensa√ß√£o vs Intui√ß√£o', 'Pensamento vs Sentimento', 'Julgamento vs Percep√ß√£o'],
        totalQuestions: 70
      }
    },
    {
      categoryId: createdCategories[1].id,
      name: 'HumaniQ DISC - Comportamento e Comunica√ß√£o',
      description: 'Identifica perfil comportamental baseado no modelo DISC para otimizar comunica√ß√£o e trabalho em equipe.',
      instructions: 'Para cada situa√ß√£o, escolha a alternativa que melhor descreve seu comportamento mais natural e espont√¢neo.',
      testType: TestType.PERSONALITY,
      estimatedDuration: 20,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: true,
        timeLimit: 1200,
        retakePolicy: 'unlimited',
        dimensions: ['Domin√¢ncia', 'Influ√™ncia', 'Estabilidade', 'Conformidade'],
        totalQuestions: 28
      }
    },
    {
      categoryId: createdCategories[1].id,
      name: 'HumaniQ EIQ - Intelig√™ncia Emocional',
      description: 'Avalia compet√™ncias de intelig√™ncia emocional baseado no modelo de Goleman adaptado para ambiente corporativo.',
      instructions: 'Responda com base em como voc√™ normalmente age em situa√ß√µes emocionais. Considere experi√™ncias recentes.',
      testType: TestType.PERSONALITY,
      estimatedDuration: 30,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 1800,
        retakePolicy: 'limited',
        maxRetakes: 2,
        dimensions: ['Autoconsci√™ncia', 'Autorregula√ß√£o', 'Motiva√ß√£o', 'Empatia', 'Habilidades Sociais'],
        totalQuestions: 50
      }
    },

    // CATEGORIA 3: TESTE GRAFOL√ìGICO (1 TESTE)
    {
      categoryId: createdCategories[2].id,
      name: 'HumaniQ GRA - An√°lise Grafol√≥gica',
      description: 'An√°lise de personalidade atrav√©s da escrita manuscrita com interpreta√ß√£o por Intelig√™ncia Artificial.',
      instructions: 'Escreva o texto solicitado de forma natural, como escreveria normalmente. Use caneta ou stylus se dispon√≠vel.',
      testType: TestType.GRAPHOLOGY,
      estimatedDuration: 15,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 900,
        retakePolicy: 'none',
        analysisType: 'AI-powered',
        textSamples: ['Texto livre sobre seus objetivos profissionais', 'Descri√ß√£o de uma experi√™ncia marcante', 'Assinatura e texto padr√£o'],
        totalSamples: 3
      }
    },

    // CATEGORIA 4: TESTES CORPORATIVOS (9 TESTES)
    {
      categoryId: createdCategories[3].id,
      name: 'HumaniQ LID - Lideran√ßa e Gest√£o',
      description: 'Avalia compet√™ncias de lideran√ßa, capacidade de gest√£o de equipes e tomada de decis√£o.',
      instructions: 'Responda baseado em experi√™ncias reais de lideran√ßa, mesmo que informais. Considere situa√ß√µes onde voc√™ orientou outros.',
      testType: TestType.CORPORATE,
      estimatedDuration: 35,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 2100,
        retakePolicy: 'limited',
        maxRetakes: 2,
        dimensions: ['Vis√£o Estrat√©gica', 'Influ√™ncia', 'Delega√ß√£o', 'Desenvolvimento de Pessoas', 'Tomada de Decis√£o'],
        totalQuestions: 45
      }
    },
    {
      categoryId: createdCategories[3].id,
      name: 'HumaniQ TEQ - Trabalho em Equipe',
      description: 'Avalia habilidades de colabora√ß√£o, coopera√ß√£o e contribui√ß√£o efetiva em equipes de trabalho.',
      instructions: 'Pense em experi√™ncias recentes trabalhando em equipe. Responda como voc√™ naturalmente se comporta nessas situa√ß√µes.',
      testType: TestType.CORPORATE,
      estimatedDuration: 25,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: true,
        timeLimit: 1500,
        retakePolicy: 'unlimited',
        dimensions: ['Colabora√ß√£o', 'Comunica√ß√£o em Equipe', 'Resolu√ß√£o de Conflitos', 'Compartilhamento'],
        totalQuestions: 32
      }
    },
    {
      categoryId: createdCategories[3].id,
      name: 'HumaniQ ADT - Adaptabilidade e Mudan√ßa',
      description: 'Mede flexibilidade, resili√™ncia e capacidade de adapta√ß√£o a mudan√ßas organizacionais.',
      instructions: 'Reflita sobre como voc√™ reage a mudan√ßas e situa√ß√µes imprevistas no trabalho. Seja honesto sobre suas rea√ß√µes.',
      testType: TestType.CORPORATE,
      estimatedDuration: 20,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 1200,
        retakePolicy: 'limited',
        maxRetakes: 3,
        dimensions: ['Flexibilidade', 'Resili√™ncia', 'Abertura √† Mudan√ßa', 'Aprendizagem Cont√≠nua'],
        totalQuestions: 28
      }
    },
    {
      categoryId: createdCategories[3].id,
      name: 'HumaniQ CRI - Criatividade e Inova√ß√£o',
      description: 'Avalia pensamento criativo, capacidade de inova√ß√£o e gera√ß√£o de solu√ß√µes originais.',
      instructions: 'Responda sobre como voc√™ aborda problemas e gera ideias. Considere tanto criatividade quanto implementa√ß√£o pr√°tica.',
      testType: TestType.CORPORATE,
      estimatedDuration: 30,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: true,
        timeLimit: 1800,
        retakePolicy: 'unlimited',
        dimensions: ['Pensamento Divergente', 'Originalidade', 'Implementa√ß√£o de Ideias', 'Inova√ß√£o Pr√°tica'],
        totalQuestions: 36
      }
    },
    {
      categoryId: createdCategories[3].id,
      name: 'HumaniQ PRE - Resolu√ß√£o de Problemas',
      description: 'Mede habilidades anal√≠ticas, pensamento l√≥gico e capacidade de resolver problemas complexos.',
      instructions: 'Voc√™ encontrar√° situa√ß√µes-problema. Analise cada cen√°rio e escolha a melhor abordagem de solu√ß√£o.',
      testType: TestType.CORPORATE,
      estimatedDuration: 40,
      configuration: {
        adaptiveTesting: true,
        randomizeQuestions: false,
        timeLimit: 2400,
        retakePolicy: 'limited',
        maxRetakes: 2,
        dimensions: ['An√°lise de Problemas', 'Pensamento L√≥gico', 'Criatividade na Solu√ß√£o', 'Implementa√ß√£o'],
        totalQuestions: 35
      }
    },
    {
      categoryId: createdCategories[3].id,
      name: 'HumaniQ COM - Comunica√ß√£o Eficaz',
      description: 'Avalia habilidades de comunica√ß√£o verbal, escrita e capacidade de transmitir informa√ß√µes claramente.',
      instructions: 'Responda sobre suas prefer√™ncias e habilidades de comunica√ß√£o em diferentes contextos profissionais.',
      testType: TestType.CORPORATE,
      estimatedDuration: 25,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 1500,
        retakePolicy: 'unlimited',
        dimensions: ['Comunica√ß√£o Verbal', 'Comunica√ß√£o Escrita', 'Escuta Ativa', 'Apresenta√ß√µes'],
        totalQuestions: 30
      }
    },
    {
      categoryId: createdCategories[3].id,
      name: 'HumaniQ MOT - Motiva√ß√£o e Engajamento',
      description: 'Identifica fatores motivacionais pessoais e n√≠vel de engajamento com o trabalho e objetivos organizacionais.',
      instructions: 'Reflita sobre o que mais te motiva no trabalho e como voc√™ se relaciona com seus objetivos profissionais.',
      testType: TestType.CORPORATE,
      estimatedDuration: 20,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: true,
        timeLimit: 1200,
        retakePolicy: 'unlimited',
        dimensions: ['Motiva√ß√£o Intr√≠nseca', 'Motiva√ß√£o Extr√≠nseca', 'Engajamento', 'Prop√≥sito'],
        totalQuestions: 26
      }
    },
    {
      categoryId: createdCategories[3].id,
      name: 'HumaniQ EST - Gest√£o de Estresse',
      description: 'Avalia capacidade de lidar com press√£o, gerenciar estresse e manter performance sob adversidade.',
      instructions: 'Pense em situa√ß√µes estressantes que voc√™ enfrentou no trabalho. Responda sobre suas estrat√©gias de enfrentamento.',
      testType: TestType.CORPORATE,
      estimatedDuration: 25,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 1500,
        retakePolicy: 'limited',
        maxRetakes: 2,
        dimensions: ['Reconhecimento do Estresse', 'Estrat√©gias de Enfrentamento', 'Resili√™ncia', 'Equil√≠brio'],
        totalQuestions: 32
      }
    },
    {
      categoryId: createdCategories[3].id,
      name: 'HumaniQ ETI - √âtica e Integridade',
      description: 'Avalia valores √©ticos, integridade moral e comportamento √©tico em situa√ß√µes profissionais complexas.',
      instructions: 'Voc√™ encontrar√° dilemas √©ticos profissionais. Escolha a resposta que melhor reflete seus valores e princ√≠pios.',
      testType: TestType.CORPORATE,
      estimatedDuration: 30,
      configuration: {
        adaptiveTesting: false,
        randomizeQuestions: false,
        timeLimit: 1800,
        retakePolicy: 'limited',
        maxRetakes: 1,
        dimensions: ['Integridade', 'Responsabilidade', 'Transpar√™ncia', 'Valores Organizacionais'],
        totalQuestions: 24
      }
    }
  ]

  const createdTests = []
  for (const test of tests) {
    // Check if test exists by name
    const existing = await prisma.test.findFirst({
      where: { name: test.name }
    })
    
    let created
    if (existing) {
      created = await prisma.test.update({
        where: { id: existing.id },
        data: test
      })
    } else {
      created = await prisma.test.create({
        data: test
      })
    }
    createdTests.push(created)
  }

  // Create sample questions for first test
  console.log('‚ùì Creating sample questions...')
  const sampleQuestions = [
    {
      testId: createdTests[0].id,
      questionNumber: 1,
      questionText: 'Como voc√™ geralmente reage em situa√ß√µes de alta press√£o no trabalho?',
      questionType: QuestionType.MULTIPLE_CHOICE,
      options: {
        choices: [
          { id: 'a', text: 'Mantenho a calma e foco na solu√ß√£o', value: 'calm_focused' },
          { id: 'b', text: 'Fico nervoso(a) mas continuo trabalhando', value: 'nervous_working' },
          { id: 'c', text: 'Procuro ajuda de colegas ou superiores', value: 'seek_help' },
          { id: 'd', text: 'Preciso de um tempo para me organizar', value: 'need_time' }
        ]
      }
    },
    {
      testId: createdTests[0].id,
      questionNumber: 2,
      questionText: 'Em uma escala de 1 a 5, o quanto voc√™ se considera uma pessoa comunicativa?',
      questionType: QuestionType.SCALE,
      options: {
        scale: {
          min: 1,
          max: 5,
          minLabel: 'Muito reservado(a)',
          maxLabel: 'Muito comunicativo(a)',
          step: 1
        }
      }
    },
    {
      testId: createdTests[0].id,
      questionNumber: 3,
      questionText: 'Descreva uma situa√ß√£o em que voc√™ demonstrou lideran√ßa:',
      questionType: QuestionType.TEXT,
      options: {
        textConfig: {
          maxLength: 500,
          minLength: 50,
          placeholder: 'Descreva a situa√ß√£o, suas a√ß√µes e os resultados obtidos...'
        }
      }
    }
  ]

  for (const question of sampleQuestions) {
    await prisma.question.upsert({
      where: {
        testId_questionNumber: {
          testId: question.testId,
          questionNumber: question.questionNumber
        }
      },
      update: question,
      create: question
    })
  }

  // Create sample company
  console.log('üè¢ Creating sample company...')
  const existingCompany = await prisma.company.findFirst({
    where: { name: 'Empresa Demonstra√ß√£o Ltda' }
  })
  
  let sampleCompany
  if (existingCompany) {
    sampleCompany = existingCompany
  } else {
    sampleCompany = await prisma.company.create({
      data: {
        name: 'Empresa Demonstra√ß√£o Ltda',
        cnpj: '12.345.678/0001-90',
        industry: 'Tecnologia',
        size: 'MEDIUM',
        website: 'https://exemplo.com.br',
        street: 'Rua das Flores, 123',
        city: 'S√£o Paulo',
        state: 'SP',
        zipCode: '01234-567',
        country: 'Brasil',
        subscriptionPlan: 'PROFESSIONAL',
        subscriptionStatus: 'ACTIVE',
        subscriptionExpiry: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000), // 1 year from now
        ownerId: companyUser.id, // Company user is the owner
        settings: {
          theme: 'light',
          notifications: true,
          autoReports: true,
          language: 'pt-BR'
        }
      }
    })
  }

  // Update users to associate with the company
  await prisma.user.update({
    where: { id: companyUser.id },
    data: { companyId: sampleCompany.id }
  })

  await prisma.user.update({
    where: { id: employeeUser.id },
    data: { companyId: sampleCompany.id }
  })

  await prisma.user.update({
    where: { id: candidateUser.id },
    data: { companyId: sampleCompany.id }
  })



  // Create ERP configuration sample
  console.log('üîó Creating ERP configuration...')
  await prisma.eRPConfig.upsert({
    where: { id: 'erp-demo-config' },
    update: {},
    create: {
      id: 'erp-demo-config',
      name: 'TOTVS Protheus Demo',
      companyId: sampleCompany.id,
      erpType: 'TOTVS_PROTHEUS',
      apiUrl: 'https://demo-totvs-api.com/api/v1',
      apiKey: 'demo-api-key-12345',
      username: 'demo_user',
      isActive: true,
      syncStatus: 'SUCCESS',
      lastSync: new Date(),
      employeeCount: 150,
      autoSync: true,
      config: {
        syncEmployees: true,
        syncDepartments: true,
        syncFrequency: 'daily',
        mappings: {
          employeeId: 'employee_code',
          department: 'dept_name',
          position: 'job_title'
        }
      }
    }
  })

  // Create sample notifications
  console.log('üîî Creating sample notifications...')
  await prisma.userNotification.create({
    data: {
      userId: adminUser.id,
      type: 'INFO',
      title: 'Bem-vindo ao HumaniQ AI!',
      message: 'Sistema inicializado com sucesso. Voc√™ √© o administrador principal da plataforma.',
      createdAt: new Date()
    }
  })

  await prisma.companyNotification.create({
    data: {
      companyId: sampleCompany.id,
      type: 'SUCCESS',
      title: 'Integra√ß√£o ERP Configurada',
      message: 'A integra√ß√£o com TOTVS foi configurada e est√° funcionando corretamente.',
      createdAt: new Date(Date.now() - 24 * 60 * 60 * 1000) // 1 day ago
    }
  })

  console.log('‚úÖ Database seed completed successfully!')
  console.log('\nüìù Demo User Accounts:')
  console.log('üëë ADMINISTRADOR:')
  console.log('   üîπ Email: admin@humaniq.ai')
  console.log('   üîπ Senha: admin123')
  console.log('   üîπ Tipo: Administrador Principal (Propriet√°rio da SaaS)')
  console.log('\nüè¢ EMPRESA:')
  console.log('   üîπ Email: empresa@demo.com')
  console.log('   üîπ Senha: empresa123')
  console.log('   üîπ Tipo: Empresa (Gest√£o de colaboradores e testes)')
  console.log('\nüë§ COLABORADOR:')
  console.log('   üîπ Email: colaborador@demo.com')
  console.log('   üîπ Senha: colaborador123')
  console.log('   üîπ Tipo: Colaborador (Realizar testes psicossociais)')
  console.log('\nüéØ CANDIDATO:')
  console.log('   üîπ Email: candidato@demo.com')
  console.log('   üîπ Senha: candidato123')
  console.log('   üîπ Tipo: Candidato (Processo seletivo)')
  console.log('\nüß™ HumaniQ AI Complete Test Suite:')
  console.log(`üîπ ${createdCategories.length} test categories`)
  console.log(`üîπ ${createdTests.length} complete HumaniQ tests (4 Psicossociais + 4 Perfil + 1 Grafol√≥gico + 9 Corporativos)`)
  console.log(`üîπ ${sampleQuestions.length} sample questions for first test`)
  console.log('üîπ 1 sample company with ERP integration')
  console.log('üîπ Sample notifications')
  console.log('\nüéØ Test Distribution:')
  console.log('üîπ Testes Psicossociais: RPO, BSC, SESM, RAO')
  console.log('üîπ Testes de Perfil: BFI, 16P, DISC, EIQ')
  console.log('üîπ Teste Grafol√≥gico: GRA')
  console.log('üîπ Testes Corporativos: LID, TEQ, ADT, CRI, PRE, COM, MOT, EST, ETI')
}

main()
  .catch((e) => {
    console.error('‚ùå Seed error:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
